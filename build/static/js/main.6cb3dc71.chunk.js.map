{"version":3,"sources":["home.js","posts.js","users.js","about.js","app.js","index.js"],"names":["Home","Container","className","Row","Col","Figure","Image","width","height","alt","src","style","color","React","Component","API_URL","Posts","handleShow","setState","show","handleClose","handleShow2","openModal","handleClose2","componentDidMount","getPosts","a","axios","get","data","posts","console","log","state","error","getUser","id","user","getComments","postId","comments","createPost","userId","title","body","post","push","updatePost","put","index","findIndex","deletePost","delete","filter","selectPost","handleChange","target","name","value","handleSubmit","e","preventDefault","submitted","valid","this","Form","onSubmit","Group","controlId","Label","column","sm","Control","type","size","minlength","onChange","required","as","rows","Button","variant","Table","hover","colSpan","map","onClick","Modal","fade","animation","onHide","Header","closeButton","Title","Body","email","phone","Users","getUsers","users","createUser","updateUser","deleteUser","userID","selectUser","About","props","Card","border","roundedCircle","Text","Footer","App","Navbar","bg","Brand","href","Nav","NavLink","exact","activeClass","path","component","to","ReactDOM","render","document","getElementById"],"mappings":"mRA8BeA,E,4JA1Bb,WACE,OACE,mCACE,cAACC,EAAA,EAAD,CAAWC,UAAU,WAArB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKF,UAAU,OAAf,SACA,cAACG,EAAA,EAAD,UACA,cAACA,EAAA,EAAOC,MAAR,CACEC,MAAO,IACPC,OAAQ,IACRC,IAAI,UACJC,IAAI,wFAIN,eAACN,EAAA,EAAD,CAAKF,UAAU,YAAf,UACA,oBAAIS,MAAO,CAAEC,MAAO,WAApB,kBACA,mBAAGD,MAAO,CAAEC,MAAO,WAAnB,0V,GAlBOC,IAAMC,W,qHCOnBC,EAAU,6CAsSDC,E,kDAlSb,aAAe,IAAD,8BACZ,gBAgBFC,WAAa,WACX,EAAKC,SAAS,CACZC,MAAK,KAnBK,EAuBdC,YAAa,WACX,EAAKF,SAAS,CACZC,MAAK,KAzBK,EA6BdE,YAAc,WACZ,EAAKH,SAAS,CACZI,WAAU,KA/BA,EAmCdC,aAAe,WACb,EAAKL,SAAS,CACZI,WAAU,KArCA,EAyCdE,kBAAoB,kBAAM,EAAKC,YAzCjB,EA2CdA,SA3Cc,sBA2CH,8BAAAC,EAAA,+EAGgBC,IAAMC,IAAIb,GAH1B,gBAGCc,EAHD,EAGCA,KACR,EAAKX,SAAS,CAAEY,MAAOD,IACvBE,QAAQC,IAAI,EAAKC,MAAMH,OALhB,gDAOPC,QAAQG,MAAR,MAPO,yDA3CG,EAqDdC,QArDc,uCAqDJ,WAAOC,GAAP,iBAAAV,EAAA,+EAGiBC,IAAMC,IAAN,qDAAwDQ,IAHzE,gBAGEP,EAHF,EAGEA,KACR,EAAKX,SAAS,CAAEmB,KAAMR,IACtBE,QAAQC,IAAI,EAAKC,MAAMI,MALjB,gDAONN,QAAQG,MAAR,MAPM,yDArDI,wDA+DdI,YA/Dc,uCA+DA,WAAOC,GAAP,iBAAAb,EAAA,+EAGaC,IAAMC,IAAN,qDAAwDW,EAAxD,cAHb,gBAGFV,EAHE,EAGFA,KACR,EAAKX,SAAS,CAAEsB,SAAUX,IAC1BE,QAAQC,IAAI,EAAKC,MAAMO,UALb,gDAOVT,QAAQG,MAAR,MAPU,yDA/DA,wDA0EdO,WA1Ec,sBA0ED,wCAAAf,EAAA,wEAGuB,EAAKO,MAA7BS,EAHC,EAGDA,OAAQC,EAHP,EAGOA,MAAOC,EAHd,EAGcA,KAHd,SAIcjB,IAAMkB,KAAK9B,EAAS,CACzC2B,SACAC,QACAC,SAPO,gBAIDf,EAJC,EAIDA,MAKFC,EATG,YASS,EAAKG,MAAMH,QACvBgB,KAAKjB,GACX,EAAKX,SAAS,CAAEY,QAAOY,OAAQ,GAAIC,MAAO,GAAIC,KAAM,KAX3C,kDAaTb,QAAQG,MAAR,MAbS,0DA1EC,EA2Fda,WA3Fc,sBA2FD,4CAAArB,EAAA,wEAGkC,EAAKO,MAAxCG,EAHC,EAGDA,GAAIM,EAHH,EAGGA,OAAQC,EAHX,EAGWA,MAAOC,EAHlB,EAGkBA,KAAMd,EAHxB,EAGwBA,MAHxB,SAIcH,IAAMqB,IAAN,UAAajC,EAAb,YAAwBqB,GAAM,CACnDM,SACAC,QACAC,SAPO,gBAIDf,EAJC,EAIDA,KAKFoB,EAAQnB,EAAMoB,WAAU,SAACL,GAAD,OAAUA,EAAKT,KAAOA,KACpDN,EAAMmB,GAASpB,EAEf,EAAKX,SAAS,CAAEY,QAAOM,GAAI,GAAIM,OAAQ,GAAIC,MAAO,GAAIC,KAAM,KAZnD,kDAcTb,QAAQC,IAAR,MAdS,0DA3FC,EA6GdmB,WA7Gc,uCA6GD,WAAOZ,GAAP,eAAAb,EAAA,+EAGHC,IAAMyB,OAAN,UAAgBrC,EAAhB,YAA2BwB,IAHxB,OAMTT,GADIA,EALK,YAKO,EAAKG,MAAMH,QACbuB,QAAO,qBAAGjB,KAAgBG,KAExC,EAAKrB,SAAS,CAAEY,UARP,gDAUTC,QAAQG,MAAR,MAVS,yDA7GC,wDA2HdoB,WAAa,SAACT,GAAD,OAAU,EAAK3B,SAAL,eAAmB2B,KA3H5B,EA6HdU,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKxC,SAAL,eAAiBuC,EAAOC,KA9HZ,EAiIdC,aAAe,SAACC,GACdA,EAAEC,iBACF9B,QAAQC,IAAI,gBACR,EAAKC,MAAMG,GACb,EAAKW,aAEL,EAAKN,cArIP,EAAKR,MAAQ,CACXH,MAAO,GACPM,GAAI,GACJM,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNtB,WAAW,EACXH,MAAM,EACNkB,KAAM,GACNG,SAAU,GACVsB,WAAW,EACXC,OAAO,GAbG,E,0CA+Id,WAAU,IAAD,OACD5C,EAAQ6C,KAAK/B,MAAbd,KACAG,EAAa0C,KAAK/B,MAAlBX,UACN,OACE,sBAAKpB,UAAU,gBAAf,UACE,eAAC+D,EAAA,EAAD,CAAMC,SAAUF,KAAKL,aAArB,UACE,eAACM,EAAA,EAAKE,MAAN,CAAYjE,UAAU,OAAOkE,UAAU,aAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,2BACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,SACLC,KAAK,KACLxE,UAAU,UACVyE,UAAU,IACVlB,KAAK,SACLC,MAAOM,KAAK/B,MAAMS,OAClBkC,SAAUZ,KAAKT,aACfsB,UAAQ,OAIZ,eAACZ,EAAA,EAAKE,MAAN,CAAYjE,UAAU,OAAOkE,UAAU,YAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,0BACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLC,KAAK,KACLxE,UAAU,UACVyE,UAAU,KACVlB,KAAK,QACLC,MAAOM,KAAK/B,MAAMU,MAClBiC,SAAUZ,KAAKT,aACfsB,UAAQ,OAIZ,eAACZ,EAAA,EAAKE,MAAN,CAAYjE,UAAU,OAAOkE,UAAU,WAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,yBACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLC,KAAK,KACLxE,UAAU,UACVyE,UAAU,KACVG,GAAG,WAAWC,KAAM,EACpBtB,KAAK,OACLC,MAAOM,KAAK/B,MAAMW,KAClBgC,SAAUZ,KAAKT,aACfsB,UAAQ,OAIZ,cAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,SAA/B,oBAGA,uBACA,0BAEF,eAACS,EAAA,EAAD,CAAOC,OAAK,EAACT,KAAK,KAAlB,UACE,gCACE,+BACE,oBAAInE,MAAM,KAAKL,UAAU,cAAzB,gBACA,oBAAIK,MAAM,KAAKL,UAAU,cAAzB,oBACA,oBAAIK,MAAM,MAAML,UAAU,cAA1B,mBACA,oBAAIK,MAAM,MAAML,UAAU,cAA1B,kBACA,oBAAIK,MAAM,KAAKL,UAAU,cAAckF,QAAQ,IAA/C,yBAGJ,gCACGpB,KAAK/B,MAAMH,MAAMuD,KAAI,SAACxC,GACrB,OACE,+BACE,oBAAI3C,UAAU,cAAd,SAA6B2C,EAAKT,KAClC,oBAAIlC,UAAU,cAAd,SAA6B2C,EAAKH,SAClC,6BAAKG,EAAKF,QACV,6BAAKE,EAAKD,OACV,+BACE,cAACoC,EAAA,EAAD,CAAQC,QAAQ,QAAQP,KAAK,KAAKY,QAAS,WAAQ,EAAKrE,aAAc,EAAKkB,QAAQU,EAAKH,SAAxF,SAAoG,cAAC,IAAD,MACpG,eAAC6C,EAAA,EAAD,CAAOC,MAAM,EAAOC,WAAW,EAAOtE,KAAMA,EAAOuE,OAAQ,EAAKtE,YAAasD,KAAK,KAAlF,UACE,cAACa,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,6BAEF,cAACN,EAAA,EAAMO,KAAP,UACE,eAACZ,EAAA,EAAD,CAAOC,OAAK,EAACT,KAAK,KAAlB,UACE,gCACE,+BACE,oBAAInE,MAAM,MAAML,UAAU,cAA1B,kBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIK,MAAM,MAAML,UAAU,cAA1B,wBAGJ,gCACE,+BACE,oBAAIA,UAAU,cAAd,SAA6B,EAAK+B,MAAMI,KAAKoB,OAC7C,oBAAIvD,UAAU,cAAd,SAA6B,EAAK+B,MAAMI,KAAK0D,QAC7C,6BAAK,EAAK9D,MAAMI,KAAK2D,wBAOjC,+BACE,cAAChB,EAAA,EAAD,CAAQC,QAAQ,QAAQP,KAAK,KAAKY,QAAS,WAAQ,EAAKjE,cAAe,EAAKiB,YAAYO,EAAKT,KAA7F,SAAqG,cAAC,IAAD,MACrG,eAACmD,EAAA,EAAD,CAAOC,MAAM,EAAOC,WAAW,EAAOtE,KAAMG,EAAWoE,OAAQ,EAAKnE,aAAcmD,KAAK,KAAvF,UACE,cAACa,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,yBAEF,cAACN,EAAA,EAAMO,KAAP,UACE,eAACZ,EAAA,EAAD,CAAOC,OAAK,EAACT,KAAK,KAAlB,UACE,gCACE,+BACE,oBAAInE,MAAM,MAAML,UAAU,cAA1B,mBACA,oBAAIK,MAAM,MAAML,UAAU,cAA1B,mBACA,oBAAKA,UAAU,cAAf,uBAGJ,gCACG,EAAK+B,MAAMO,SAAS6C,KAAI,SAACxD,GACxB,OACE,+BACE,oBAAI3B,UAAU,cAAd,SAA6B2B,EAAKkE,QAClC,oBAAI7F,UAAU,cAAd,SAA6B2B,EAAK4B,OAClC,6BAAK5B,EAAKe,SAHHf,EAAKO,oBAY5B,6BACE,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,QAAQP,KAAK,KAAKY,QAAS,kBAAM,EAAKhC,WAAWT,IAAjE,SAAwE,cAAC,IAAD,QAE1E,6BACE,cAACmC,EAAA,EAAD,CAAQC,QAAQ,QAAQP,KAAK,KAAKY,QAAS,kBAAM,EAAKnC,WAAWN,EAAKT,KAAtE,SAA2E,cAAC,IAAD,UAjEtES,EAAKT,mB,GApNVvB,IAAMC,WCLpBC,EAAU,6CAgLDkF,E,kDA5Kb,aAAe,IAAD,8BACZ,gBAUFzE,kBAAoB,kBAAM,EAAK0E,YAXjB,EAadA,SAbc,sBAaH,8BAAAxE,EAAA,+EAGgBC,IAAMC,IAAIb,GAH1B,gBAGCc,EAHD,EAGCA,KACR,EAAKX,SAAS,CAAEiF,MAAOtE,IACvBE,QAAQC,IAAI,EAAKC,MAAMkE,OALhB,gDAOPpE,QAAQG,MAAR,MAPO,yDAbG,EAwBdkE,WAxBc,sBAwBD,wCAAA1E,EAAA,wEAGsB,EAAKO,MAA5BwB,EAHC,EAGDA,KAAMsC,EAHL,EAGKA,MAAOC,EAHZ,EAGYA,MAHZ,SAIcrE,IAAMkB,KAAK9B,EAAS,CACzC0C,OACAsC,QACAC,UAPO,gBAIDnE,EAJC,EAIDA,MAKFsE,EATG,YASS,EAAKlE,MAAMkE,QACvBrD,KAAKjB,GACX,EAAKX,SAAS,CAAEiF,QAAO1C,KAAM,GAAIsC,MAAO,GAAIC,MAAO,KAX1C,kDAaTjE,QAAQG,MAAR,MAbS,0DAxBC,EAyCdmE,WAzCc,sBAyCD,4CAAA3E,EAAA,wEAGiC,EAAKO,MAAvCG,EAHC,EAGDA,GAAIqB,EAHH,EAGGA,KAAMsC,EAHT,EAGSA,MAAOC,EAHhB,EAGgBA,MAAOG,EAHvB,EAGuBA,MAHvB,SAIcxE,IAAMqB,IAAN,UAAajC,EAAb,YAAwBqB,GAAM,CACnDqB,OACAsC,QACAC,UAPO,gBAIDnE,EAJC,EAIDA,KAKFoB,EAAQkD,EAAMjD,WAAU,SAACb,GAAD,OAAUA,EAAKD,KAAOA,KACpD+D,EAAMlD,GAASpB,EAEf,EAAKX,SAAS,CAAEiF,QAAO/D,GAAI,GAAIqB,KAAM,GAAIsC,MAAO,GAAIC,MAAO,KAZlD,kDAcTjE,QAAQC,IAAR,MAdS,0DAzCC,EA2DdsE,WA3Dc,uCA2DD,WAAOC,GAAP,eAAA7E,EAAA,+EAGHC,IAAMyB,OAAN,UAAgBrC,EAAhB,YAA2BwF,IAHxB,OAMTJ,GADIA,EALK,YAKO,EAAKlE,MAAMkE,QACb9C,QAAO,qBAAGjB,KAAgBmE,KAExC,EAAKrF,SAAS,CAAEiF,UARP,gDAUTpE,QAAQG,MAAR,MAVS,yDA3DC,wDAyEdsE,WAAa,SAACnE,GAAD,OAAU,EAAKnB,SAAL,eAAmBmB,KAzE5B,EA2EdkB,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKxC,SAAL,eAAiBuC,EAAOC,KA5EZ,EA+EdC,aAAe,SAACC,GACdA,EAAEC,iBACF9B,QAAQC,IAAI,gBACR,EAAKC,MAAMG,GACb,EAAKiE,aAEL,EAAKD,cAnFP,EAAKnE,MAAQ,CACXkE,MAAO,GACP/D,GAAI,GACJqB,KAAM,GACNsC,MAAO,GACPC,MAAO,IAPG,E,0CAyFd,WAAU,IAAD,OACP,OACE,sBAAK9F,UAAU,gBAAf,UACE,eAAC+D,EAAA,EAAD,CAAMC,SAAUF,KAAKL,aAArB,UACE,eAACM,EAAA,EAAKE,MAAN,CAAYjE,UAAU,OAAOkE,UAAU,WAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,yBACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLC,KAAK,KACLC,UAAU,IACVzE,UAAU,UACVuD,KAAK,OACLC,MAAOM,KAAK/B,MAAMwB,KAClBmB,SAAUZ,KAAKT,aACfsB,UAAQ,OAGZ,eAACZ,EAAA,EAAKE,MAAN,CAAYjE,UAAU,OAAOkE,UAAU,YAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,0BACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,QACLC,KAAK,KACLxE,UAAU,UACVuD,KAAK,QACLC,MAAOM,KAAK/B,MAAM8D,MAClBnB,SAAUZ,KAAKT,aACfsB,UAAQ,OAGZ,eAACZ,EAAA,EAAKE,MAAN,CAAYjE,UAAU,OAAOkE,UAAU,YAAvC,UACE,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,IAAtB,0BACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,SACLC,KAAK,KACLxE,UAAU,UACVuD,KAAK,QACLC,MAAOM,KAAK/B,MAAM+D,MAClBpB,SAAUZ,KAAKT,aACfsB,UAAQ,OAGZ,cAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,SAA/B,oBAGA,uBACA,0BAEF,eAACS,EAAA,EAAD,CAAOC,OAAK,EAACT,KAAK,KAAlB,UACE,gCACE,+BACE,oBAAInE,MAAM,KAAKL,UAAU,cAAzB,gBACA,oBAAIK,MAAM,MAAML,UAAU,cAA1B,kBACA,oBAAIK,MAAM,MAAML,UAAU,cAA1B,mBACA,oBAAIK,MAAM,MAAML,UAAU,cAA1B,mBACA,oBAAIK,MAAM,KAAKL,UAAU,cAAckF,QAAQ,IAA/C,yBAGJ,gCACGpB,KAAK/B,MAAMkE,MAAMd,KAAI,SAAChD,GACrB,OACE,+BACE,oBAAInC,UAAU,cAAd,SAA6BmC,EAAKD,KAClC,oBAAIlC,UAAU,cAAd,SAA6BmC,EAAKoB,OAClC,oBAAIvD,UAAU,cAAd,SAA6BmC,EAAK0D,QAClC,oBAAI7F,UAAU,cAAd,SAA6BmC,EAAK2D,QAClC,6BACE,cAAChB,EAAA,EAAD,CAAQC,QAAQ,QAAQP,KAAK,KAAKY,QAAS,kBAAM,EAAKkB,WAAWnE,IAAjE,SAAwE,cAAC,IAAD,QAE1E,6BACE,cAAC2C,EAAA,EAAD,CAAQC,QAAQ,QAAQP,KAAK,KAAKY,QAAS,kBAAM,EAAKgB,WAAWjE,EAAKD,KAAtE,SAA2E,cAAC,IAAD,UATtEC,EAAKD,mB,GAtJVvB,IAAMC,W,iBCmBX2F,MA5Bf,SAAeC,GAEb,OADA3E,QAAQC,IAAI0E,GAEV,mCACE,qBAAKxG,UAAU,WAAf,SACE,eAACyG,EAAA,EAAD,CAAMzG,UAAU,cAAc0G,OAAO,YAArC,UACE,cAACD,EAAA,EAAKhB,OAAN,UAAa,cAACrF,EAAA,EAAD,CAAOC,MAAO,IAAKC,OAAQ,IAAKE,IAAI,kEAAkEmG,eAAa,MAChI,eAACF,EAAA,EAAKb,KAAN,WACE,cAACa,EAAA,EAAKd,MAAN,yBACA,cAACc,EAAA,EAAKG,KAAN,CAAW5G,UAAU,aAArB,4FAIF,cAACyG,EAAA,EAAKI,OAAN,UACE,6BAAY7G,UAAU,kBAAtB,UACE,yOAIA,wBAAQA,UAAU,oBAAlB,SAAsC,sECoCrC8G,E,4JAvCb,WAEE,OADAjF,QAAQC,IAAI,wBAEV,eAAC,IAAD,WAEE,cAACiF,EAAA,EAAD,CAAQC,GAAG,UAAUjC,QAAQ,OAA7B,SACE,eAAChF,EAAA,EAAD,WACE,cAACgH,EAAA,EAAOE,MAAR,CAAcC,KAAK,QAAnB,wCACA,eAACC,EAAA,EAAD,CAAKnH,UAAU,sBAAf,UACE,cAACoH,EAAA,EAAD,CAASC,OAAK,EAACH,KAAK,QAApB,kBACA,cAACE,EAAA,EAAD,CAASC,OAAK,EAACH,KAAK,SAApB,mBACA,cAACE,EAAA,EAAD,CAASC,OAAK,EAACH,KAAK,SAApB,mBACA,cAACE,EAAA,EAAD,CAASC,OAAK,EAACH,KAAK,SAApB,2BAKN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,OAAK,EAACC,YAAY,SAASC,KAAK,IAAIC,UAAW1H,IACtD,cAAC,IAAD,CAAOuH,OAAK,EAACE,KAAK,QAAlB,SACE,cAAC,IAAD,CAAUE,GAAG,QAEf,cAAC,IAAD,CAAOJ,OAAK,EAACE,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOF,OAAK,EAACE,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOF,OAAK,EAACE,KAAK,SAASC,UAAWjB,IACtC,cAAC,IAAD,CAAOgB,KAAK,IAAZ,SACE,uD,GA/BM3G,a,OCVlB8G,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6cb3dc71.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Figure, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"m-5 pt-5\">\r\n          <Row>\r\n            <Col className=\"mt-2\">\r\n            <Figure>\r\n            <Figure.Image\r\n              width={580}\r\n              height={580}\r\n              alt=\"171x180\"\r\n              src=\"https://www.heynic.com/wp-content/uploads/2020/04/splash-dribbble-2048x1503.jpg\"\r\n            />\r\n          </Figure>\r\n            </Col>\r\n            <Col className=\"m-5 pt-5 \">\r\n            <h1 style={{ color: \"#0F52BA\" }}>CRUD</h1>\r\n            <p style={{ color: \"#0F52BA\" }}>CRUD is an acronym that comes from the world of computer programming and refers to the four functions that are considered necessary to implement a persistent storage application: create, read, update and delete. The term was likely first popularized by James Martin in his 1983 book Managing the Data-base environment.</p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BsFillChatSquareDotsFill } from \"react-icons/bs\";\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\nimport { BsPencil } from \"react-icons/bs\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport { Table, Button, Form, Modal} from \"react-bootstrap\";\r\n\r\nconst API_URL = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\n\r\nclass Posts extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      posts: [],\r\n      id: \"\",\r\n      userId: \"\",\r\n      title: \"\",\r\n      body: \"\",\r\n      openModal: false,\r\n      show: false,\r\n      user: [],\r\n      comments: [],\r\n      submitted: false,\r\n      valid: false\r\n    };\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      show:true\r\n    })\r\n  }\r\n\r\n  handleClose= () =>{\r\n    this.setState({\r\n      show:false\r\n    })\r\n  }\r\n\r\n  handleShow2 = () => {\r\n    this.setState({\r\n      openModal:true\r\n    })\r\n  }\r\n\r\n  handleClose2 = () =>{\r\n    this.setState({\r\n      openModal:false\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => this.getPosts();\r\n\r\n  getPosts = async () => {\r\n    // API Call to server and get all posts\r\n    try {\r\n      const { data } = await axios.get(API_URL);\r\n      this.setState({ posts: data });\r\n      console.log(this.state.posts)\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  getUser = async (id) => {\r\n    // API Call to server and get user info\r\n    try {\r\n      const { data } = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      this.setState({ user: data });\r\n      console.log(this.state.user);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  getComments = async (postId) => {\r\n    // API Call to server and get all comments\r\n    try {\r\n      const { data } = await axios.get(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`);\r\n      this.setState({ comments: data });\r\n      console.log(this.state.comments);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  createPost = async () => {\r\n    // API Call to server and add new post\r\n    try {\r\n      const { userId, title, body } = this.state;\r\n      const { data } = await axios.post(API_URL, {\r\n        userId,\r\n        title,\r\n        body,\r\n      });\r\n      const posts = [...this.state.posts];\r\n      posts.push(data);\r\n      this.setState({ posts, userId: \"\", title: \"\", body: \"\" });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  updatePost = async () => {\r\n    // API Call to server and update an existing post\r\n    try {\r\n      const { id, userId, title, body, posts } = this.state;\r\n      const { data } = await axios.put(`${API_URL}/${id}`, {\r\n        userId,\r\n        title,\r\n        body,\r\n      });\r\n      const index = posts.findIndex((post) => post.id === id);\r\n      posts[index] = data;\r\n\r\n      this.setState({ posts, id: \"\", userId: \"\", title: \"\", body: \"\" });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  deletePost = async (postId) => {\r\n    // API Call to server and delete post\r\n    try {\r\n      await axios.delete(`${API_URL}/${postId}`);\r\n\r\n      let posts = [...this.state.posts];\r\n      posts = posts.filter(({ id }) => id !== postId);\r\n\r\n      this.setState({ posts });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  selectPost = (post) => this.setState({ ...post });\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Submitted...\");\r\n    if (this.state.id) {\r\n      this.updatePost();\r\n    } else {\r\n      this.createPost();\r\n    }\r\n  //   if(this.state.userId && this.state.title && this.state.body) {\r\n  //     this.setState({valid: true});\r\n  // }\r\n  // this.setState({submitted: true});\r\n  };\r\n\r\n  render() {\r\n    const{show} = this.state\r\n    const{openModal} = this.state\r\n    return (\r\n      <div className='m-3 pl-5 pr-5' >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formUserID\">\r\n            <Form.Label column sm=\"2\"> UserID  &nbsp;</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              size=\"sm\"\r\n              className=\"mx-auto\"\r\n              minlength=\"1\"\r\n              name=\"userId\"\r\n              value={this.state.userId}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            {/* {this.state.submitted && !this.state.userId && <span id='userId-error'>Enter a User Id !</span>} */}\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formTitle\">\r\n            <Form.Label column sm=\"2\"> Title  &nbsp;</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              size=\"sm\"\r\n              className=\"mx-auto\"\r\n              minlength=\"12\"\r\n              name=\"title\"\r\n              value={this.state.title}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            {/* {this.state.submitted && this.state.title && <span id='title-error'>Enter a title !</span>} */}\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBody\">\r\n            <Form.Label column sm=\"2\"> Body  &nbsp;</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              size=\"sm\"\r\n              className=\"mx-auto\"\r\n              minlength=\"20\"\r\n              as=\"textarea\" rows={3}\r\n              name=\"body\"\r\n              value={this.state.body}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            {/* {this.state.submitted && this.state.body && <span id='body-error'>Enter a body !</span>} */}\r\n          </Form.Group>\r\n          <Button variant=\"success\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <br></br>\r\n          <br></br>\r\n        </Form>\r\n        <Table hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th width=\"1%\" className=\"text-center\">Id</th>\r\n              <th width=\"1%\" className=\"text-center\">UserId</th>\r\n              <th width=\"10%\" className=\"text-center\">Title</th>\r\n              <th width=\"30%\" className=\"text-center\">Body</th>\r\n              <th width=\"1%\" className=\"text-center\" colSpan=\"4\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.posts.map((post) => {\r\n              return (\r\n                <tr key={post.id}>\r\n                  <td className=\"text-center\">{post.id}</td>\r\n                  <td className=\"text-center\">{post.userId}</td>\r\n                  <td>{post.title}</td>\r\n                  <td>{post.body}</td>\r\n                  <td>\r\n                    <Button variant=\"light\" size=\"sm\" onClick={() => { this.handleShow(); this.getUser(post.userId); }}><BsFillPersonFill /></Button>\r\n                    <Modal fade={false} animation={false} show={show}  onHide={this.handleClose} size=\"xl\">\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>User Details</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <Table hover size=\"sm\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th width=\"25%\" className=\"text-center\">Name</th>\r\n                              <th className=\"text-center\">Email</th>\r\n                              <th width=\"25%\" className=\"text-center\">Phone</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td className=\"text-center\">{this.state.user.name}</td>\r\n                              <td className=\"text-center\">{this.state.user.email}</td>\r\n                              <td>{this.state.user.phone}</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </Table>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                  </td>\r\n                  <td>\r\n                    <Button variant=\"light\" size=\"sm\" onClick={() => { this.handleShow2(); this.getComments(post.id); }}><BsFillChatSquareDotsFill /></Button>\r\n                    <Modal fade={false} animation={false} show={openModal} onHide={this.handleClose2} size=\"xl\">\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Comments</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <Table hover size=\"sm\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th width=\"20%\" className=\"text-center\">Email</th>\r\n                              <th width=\"30%\" className=\"text-center\">Title</th>\r\n                              <th  className=\"text-center\">Body</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.comments.map((data) => {\r\n                              return (\r\n                                <tr key={data.id}>\r\n                                  <td className=\"text-center\">{data.email}</td>\r\n                                  <td className=\"text-center\">{data.name}</td>\r\n                                  <td>{data.body}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                  </td>\r\n                  <td>\r\n                    <Button variant=\"light\" size=\"sm\" onClick={() => this.selectPost(post)}><BsPencil /></Button>\r\n                  </td>\r\n                  <td>\r\n                    <Button variant=\"light\" size=\"sm\" onClick={() => this.deletePost(post.id)}><BsFillTrashFill /></Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BsFillTrashFill } from \"react-icons/bs\";\r\nimport { BsPencil } from \"react-icons/bs\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\nimport { Table, Button, Form} from \"react-bootstrap\";\r\n\r\nconst API_URL = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\n\r\nclass Users extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n      id: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => this.getUsers();\r\n\r\n  getUsers = async () => {\r\n    // API Call to server and get all users\r\n    try {\r\n      const { data } = await axios.get(API_URL);\r\n      this.setState({ users: data });\r\n      console.log(this.state.users);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  createUser = async () => {\r\n    // API Call to server and add new user\r\n    try {\r\n      const { name, email, phone } = this.state;\r\n      const { data } = await axios.post(API_URL, {\r\n        name,\r\n        email,\r\n        phone,\r\n      });\r\n      const users = [...this.state.users];\r\n      users.push(data);\r\n      this.setState({ users, name: \"\", email: \"\", phone: \"\" });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  updateUser = async () => {\r\n    // API Call to server and update an existing user\r\n    try {\r\n      const { id, name, email, phone, users } = this.state;\r\n      const { data } = await axios.put(`${API_URL}/${id}`, {\r\n        name,\r\n        email,\r\n        phone,\r\n      });\r\n      const index = users.findIndex((user) => user.id === id);\r\n      users[index] = data;\r\n\r\n      this.setState({ users, id: \"\", name: \"\", email: \"\", phone: \"\" });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  deleteUser = async (userID) => {\r\n    // API Call to server and delete user\r\n    try {\r\n      await axios.delete(`${API_URL}/${userID}`);\r\n\r\n      let users = [...this.state.users];\r\n      users = users.filter(({ id }) => id !== userID);\r\n\r\n      this.setState({ users });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  selectUser = (user) => this.setState({ ...user });\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Submitted...\");\r\n    if (this.state.id) {\r\n      this.updateUser();\r\n    } else {\r\n      this.createUser();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='m-3 pl-5 pr-5' >\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formName\">\r\n            <Form.Label column sm=\"2\"> Name  &nbsp;</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              size=\"sm\"\r\n              minlength=\"3\"\r\n              className=\"mx-auto\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n            <Form.Label column sm=\"2\"> Email  &nbsp;</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              size=\"sm\"\r\n              className=\"mx-auto\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n            <Form.Label column sm=\"2\"> Phone  &nbsp;</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              size=\"sm\"\r\n              className=\"mx-auto\"\r\n              name=\"phone\"\r\n              value={this.state.phone}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"success\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <br></br>\r\n          <br></br>\r\n        </Form>\r\n        <Table hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th width=\"1%\" className=\"text-center\">Id</th>\r\n              <th width=\"30%\" className=\"text-center\">Name</th>\r\n              <th width=\"30%\" className=\"text-center\">Email</th>\r\n              <th width=\"30%\" className=\"text-center\">Phone</th>\r\n              <th width=\"1%\" className=\"text-center\" colSpan=\"2\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.users.map((user) => {\r\n              return (\r\n                <tr key={user.id}>\r\n                  <td className=\"text-center\">{user.id}</td>\r\n                  <td className=\"text-center\">{user.name}</td>\r\n                  <td className=\"text-center\">{user.email}</td>\r\n                  <td className=\"text-center\">{user.phone}</td>\r\n                  <td>\r\n                    <Button variant=\"light\" size=\"sm\" onClick={() => this.selectUser(user)}><BsPencil /></Button>\r\n                  </td>\r\n                  <td>\r\n                    <Button variant=\"light\" size=\"sm\" onClick={() => this.deleteUser(user.id)}><BsFillTrashFill /></Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default Users;\r\n","import { Image, Card } from 'react-bootstrap'\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <>\r\n      <div className=\"m-5 pt-5\">\r\n        <Card className=\"text-center\" border=\"secondary\">\r\n          <Card.Header><Image width={100} height={100} src=\"https://wce.education/wp-content/uploads/2020/09/wce-avatar.png\" roundedCircle /></Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Pragathi S</Card.Title>\r\n            <Card.Text className=\"text-muted\">\r\n              Student (Full Stack Development) at GUVI Geek Networks, IITM Research Park.\r\n          </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <blockquote className=\"blockquote mb-0\">\r\n              <h6>\r\n                Never stop fighting until you arrive at your destined place - that is, the unique you. \r\n                Have an aim in life, continuously acquire knowledge, work hard, and have perseverance to realise the great life.\r\n              </h6>\r\n              <footer className=\"blockquote-footer\"><h6>Dr. A.P.J Abdul Kalam</h6></footer>\r\n            </blockquote>\r\n          </Card.Footer>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\n// import Card from \"./card\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, NavLink, Container, Nav } from \"react-bootstrap\";\r\n// import \"./style.css\";\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./home\";\r\nimport Posts from \"./posts\";\r\nimport Users from \"./users\";\r\nimport About from \"./about\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    console.log(\"App Component Loaded\");\r\n    return (\r\n      <BrowserRouter>\r\n\r\n        <Navbar bg=\"primary\" variant=\"dark\">\r\n          <Container>\r\n            <Navbar.Brand href=\"/home\">CRUD using React-Bootstrap</Navbar.Brand>\r\n            <Nav className=\"justify-content-end\">\r\n              <NavLink exact href=\"/home\">Home</NavLink>\r\n              <NavLink exact href=\"/posts\">Posts</NavLink>\r\n              <NavLink exact href=\"/users\">Users</NavLink>\r\n              <NavLink exact href=\"/about\">About</NavLink>\r\n            </Nav>\r\n          </Container>\r\n        </Navbar>\r\n\r\n        <Switch>\r\n          <Route exact activeClass=\"active\" path=\"/\" component={Home} />\r\n          <Route exact path=\"/home\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n          <Route exact path=\"/posts\" >\r\n            <Posts />\r\n          </Route>\r\n          <Route exact path=\"/users\">\r\n            <Users />\r\n          </Route>\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route path=\"*\">\r\n            <p>404 Page !</p>\r\n          </Route>\r\n        </Switch>\r\n        \r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app.js\";\nimport 'jquery/dist/jquery.min.js';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n\n"],"sourceRoot":""}